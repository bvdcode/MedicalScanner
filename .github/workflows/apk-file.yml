name: Build MAUI APK and Release

on:
  push:
    branches:
      - main
    paths:
      - "Sources/**"
      - ".github/workflows/**"

jobs:
  build-apk:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.10.2
        with:
          useConfigFile: false

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      # Cache MAUI workload
      - name: Cache MAUI workload
        id: cache-maui
        uses: actions/cache@v3
        with:
          path: ~/.dotnet/workloads
          key: ${{ runner.os }}-maui-workload-9.0.x

      - name: Install MAUI workload (if not cached)
        if: steps.cache-maui.outputs.cache-hit != 'true'
        run: dotnet workload install maui

      # Rest of workflow remains the same
      - name: Set project path
        id: set_project
        shell: bash
        run: |
          PROJECT_PATH=$(find . -name "*.csproj" | grep -i medical | head -n1)
          if [ -z "$PROJECT_PATH" ]; then
            echo "No project file found!"
            exit 1
          fi
          echo "Found project at: $PROJECT_PATH"
          echo "project_path=$PROJECT_PATH" >> $GITHUB_OUTPUT

      - name: Update version in .csproj
        shell: bash
        run: |
          VERSION_FILE="${{ steps.set_project.outputs.project_path }}"
          VERSION="${{ steps.gitversion.outputs.semVer }}"
          BUILD_NUMBER="${{ steps.gitversion.outputs.buildMetaData }}"
          
          echo "Setting version to $VERSION (build: $BUILD_NUMBER)"
          sed -i "s|<ApplicationVersion>.*</ApplicationVersion>|<ApplicationVersion>$BUILD_NUMBER</ApplicationVersion>|g" "$VERSION_FILE"
          sed -i "s|<ApplicationDisplayVersion>.*</ApplicationDisplayVersion>|<ApplicationDisplayVersion>$VERSION</ApplicationDisplayVersion>|g" "$VERSION_FILE"

      - name: Build APK
        run: |
          dotnet restore "${{ steps.set_project.outputs.project_path }}"
          dotnet build "${{ steps.set_project.outputs.project_path }}" -c Release -f:net9.0-android

      - name: Find APK
        id: find_apk
        shell: bash
        run: |
          APK_PATH=$(find . -type f -name "*.apk" | grep bin/Release | head -n1)
          if [ -z "$APK_PATH" ]; then
            echo "No APK file found!"
            exit 1
          fi
          echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "v${{ steps.gitversion.outputs.semVer }}"
          tag_name: "v${{ steps.gitversion.outputs.semVer }}"
          files: ${{ steps.find_apk.outputs.apk_path }}