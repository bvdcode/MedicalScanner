name: Build MAUI APK and Release

on:
  push:
    branches:
      - main
    paths:
      - "Sources/**"
      - ".github/workflows/**"

jobs:
  build-apk:
    runs-on: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: List directory structure
        shell: bash
        run: find . -type d -not -path "*/\.*" | sort

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install MAUI workload
        run: dotnet workload install maui

      # Update PROJECT_PATH after seeing the actual structure
      - name: Set project path
        id: set_project
        shell: bash
        run: |
          # Find the .csproj file (adjust the path if needed after seeing directory listing)
          PROJECT_PATH=$(find . -name "*.csproj" | grep -i medical | head -n1)
          if [ -z "$PROJECT_PATH" ]; then
            echo "No project file found!"
            exit 1
          fi
          echo "Found project at: $PROJECT_PATH"
          echo "project_path=$PROJECT_PATH" >> $GITHUB_OUTPUT

      - name: Bump version in .csproj
        id: bump_version
        shell: bash
        run: |
          VERSION_FILE="${{ steps.set_project.outputs.project_path }}"
          # Use simpler grep patterns that don't require -P
          OLD_VERSION=$(grep "<ApplicationDisplayVersion>" "$VERSION_FILE" | sed 's/.*<ApplicationDisplayVersion>\(.*\)<\/ApplicationDisplayVersion>.*/\1/' || echo "1.0.0")
          OLD_CODE=$(grep "<ApplicationVersion>" "$VERSION_FILE" | sed 's/.*<ApplicationVersion>\(.*\)<\/ApplicationVersion>.*/\1/' || echo "1")
          
          NEW_CODE=$((OLD_CODE + 1))
          NEW_VERSION="1.0.$NEW_CODE"

          echo "Bumping version to $NEW_VERSION (code: $NEW_CODE)"
          # Fix: ApplicationVersion must be an integer
          sed -i "s|<ApplicationVersion>.*</ApplicationVersion>|<ApplicationVersion>$NEW_CODE</ApplicationVersion>|g" "$VERSION_FILE"
          sed -i "s|<ApplicationDisplayVersion>.*</ApplicationDisplayVersion>|<ApplicationDisplayVersion>$NEW_VERSION</ApplicationDisplayVersion>|g" "$VERSION_FILE"

          echo "version_name=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "version_code=$NEW_CODE" >> $GITHUB_OUTPUT

      - name: Restore and build
        run: |
          dotnet restore "${{ steps.set_project.outputs.project_path }}"
          dotnet build "${{ steps.set_project.outputs.project_path }}" -c Release -f:net9.0-android

      - name: Find APK
        id: find_apk
        shell: bash
        run: |
          APK_PATH=$(find . -type f -name "*.apk" | grep bin/Release | head -n1)
          if [ -z "$APK_PATH" ]; then
            echo "No APK file found!"
            exit 1
          fi
          echo "Found APK at: $APK_PATH"
          echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "v${{ steps.bump_version.outputs.version_name }}"
          tag_name: "v${{ steps.bump_version.outputs.version_name }}"
          files: ${{ steps.find_apk.outputs.apk_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}